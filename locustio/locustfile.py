from locust import HttpLocust, TaskSet, task

class MicroTaskSet(TaskSet):
    @task
    def send(l):
#        l.client.post("/awsreciever-1.0-SNAPSHOT/trace", data="eyJhbGciOiJIUzI1NiJ9..Cr3M_hc6TshsZAypmHJnNRoHtNHltBEChJh4164_2m0")
	l.client.get("/")

class MyLocust(HttpLocust):
    task_set = MicroTaskSet
    min_wait = 5000
    max_wait = 15000
    host = "http://35.176.178.244:8080"
